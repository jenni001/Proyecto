{"mappings":"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","sources":["L.js","scripts/main.js"],"sourcesContent":["module.exports=L;","import L from \"leaflet\";\r\n\r\n// Docker url\r\n const url = `http://10.10.17.194/api/`\r\n// Local url\r\n//const url = `http://localhost:5000/api/`;\r\n\r\n// Variable para el token\r\nvar sToken = \"\";\r\n// Variable del mapa\r\nvar map; \r\n\r\nfunction Login() {\r\n  // Guardo el usuario y contraseña\r\n  var usuario = `${document.getElementById('iUsuario').value}`; \r\n  var contrasena = `${document.getElementById('iContrasena').value}`;\r\n\r\n  $.ajax({\r\n      type: \"POST\",\r\n      dataType: \"json\",\r\n      contentType:'application/json',\r\n      url: url+`Users/authenticate/`,     // Usuario y contraseña\r\n      data:JSON.stringify({\r\n        username: `${usuario}`,\r\n        password: `${contrasena}`,\r\n      }),\r\n      headers: {\r\n        accept: \"application/json\",\r\n        dataType: \"json\",\r\n        contentType:'application/json',\r\n      },\r\n    }).then(function(data) {\r\n      sToken = data.token;\r\n      // Guardo el token el local\r\n      localStorage.setItem(\"sToken\", sToken);\r\n      // \r\n      window.location=\"pagina.html\";\r\n    }).fail(function(err) {\r\n      console.log(err)\r\n        alert(\"Usuario o contraseña incorrecta.\");\r\n    })\r\n  }\r\n  $(\"document\").ready(function () {\r\n\r\n    // Variable boton\r\n    var boton = $(\"#boton\");\r\n\r\n    boton.on(\"click\", Login);\r\n\r\n    if (window.location.href.indexOf(\"pagina\") > -1) {\r\n      // Inserción del mapa\r\n      sToken = localStorage.getItem(\"sToken\")\r\n      // Introduzco el mapa\r\n      map = L.map(\"map\").setView([43.3125271, -1.8986133], zoom);\r\n      L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n      attribution: '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n      }).addTo(map);\r\n      // Llamo para ubicar las balizas\r\n      DevolverBalizas();\r\n      // Se inicia el cargado de los datos cada minuto\r\n      setInterval(function() {\r\n      ActualizarDatos()\r\n      }, 60000);  \r\n    }\r\n    // Convierto en draggable todos los paneles de las opciones de los datos a mostrar\r\n    $(\"#panelTemperatura\").draggable({\r\n      revert: \"invalid\",\r\n      helper: \"clone\",\r\n    });\r\n    $(\"#panelHumedad\").draggable({\r\n      revert: \"invalid\",\r\n      helper: \"clone\",\r\n    });\r\n    $(\"#panelPresion\").draggable({\r\n      revert: \"invalid\",\r\n      helper: \"clone\",\r\n    });\r\n    $(\"#panelViento\").draggable({\r\n      revert: \"invalid\",\r\n      helper: \"clone\",\r\n    });\r\n  });\r\n\r\n// Zoom del mapa\r\nvar zoom = 8;\r\n\r\n// Icono para cuando este sin seleccionar\r\nvar iconoSinSeleccionar = L.icon({\r\n  customId: \"\",\r\n  iconUrl: \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-grey.png\",\r\n  shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png\",\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n  shadowSize: [41, 41],\r\n});\r\n// Icono para cuando este seleccionado\r\nvar iconoSeleccionado = L.icon({\r\n  customId: \"\",\r\n  iconUrl: \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-violet.png\",\r\n  shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png\",\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n  shadowSize: [41, 41],\r\n});\r\n// Variables para controlar los datos y los marcadores\r\nvar oDato;\r\nvar aMunicipios;\r\nvar aPaneles;\r\nvar arrayDatos = [];\r\nvar aMarcadores = [];\r\n\r\n// Para guardar el id del dragabble p\r\nvar idP = \"\";\r\n\r\n// Funcion para obtener los datos respecto a las balizas de la bbdd\r\nfunction DevolverBalizas() {\r\n  $.ajax({\r\n    type: \"GET\",\r\n    dataType: \"html\",\r\n    url: url + \"Meteorologia\",\r\n    headers: {\r\n      accept: \"application/json\",\r\n      authorization: \"Bearer \" + sToken,      // Se introduce el token para poder acceder a los datos que la api lee\r\n    },\r\n  })\r\n  .fail(function (err) {\r\n    console.log(\"ERROR: \" + err);\r\n  })\r\n  .then(function (data) {\r\n    aMunicipios = JSON.parse(data);\r\n    // Se crean los marcadores\r\n    MostrarMarcadores();\r\n\r\n    // Creamos el localStorage\r\n    if (localStorage.Paneles == undefined) {\r\n      aPaneles = {};\r\n      for (var i = 0; i < aMunicipios.length; i++) {\r\n        aPaneles[aMunicipios[i].codigo] = { 'visible': false, 'temperatura': false, 'humedad': false, 'viento': false, 'presion': false };\r\n      }\r\n      localStorage.Paneles = JSON.stringify(aPaneles);\r\n    } // se obtienen los datos del localStorage\r\n    else {\r\n      aPaneles = JSON.parse(localStorage.Paneles);\r\n      ObtenerLocalStorage(aPaneles);\r\n    }\r\n  });\r\n}\r\n\r\n// Funcion para obtener los datos de una baliza en cuestion\r\nfunction DevolverDato(codigo) {\r\n  return $.ajax({\r\n    type: \"GET\",\r\n    dataType: \"html\",\r\n    url: url + \"Meteorologia/\" + codigo,\r\n    headers: {\r\n      accept: \"application/json\",\r\n      authorization: \"Bearer \" + sToken,       // Se introduce el token para poder acceder a los datos que la api lee\r\n    },\r\n  }).fail(function (err) {\r\n    console.log(\"ERROR: \" + err);\r\n  });\r\n}\r\n\r\n// Funcion para crear los marcadores\r\nfunction MostrarMarcadores() {\r\n  aMunicipios.forEach((element) => {\r\n    const marker = new L.marker([element.latitud, element.longitud], { customId:`m${element.codigo}`, icon: iconoSinSeleccionar })\r\n      .bindPopup(element.nombre)\r\n      .addTo(map)\r\n      // Cuando se hace click en un marcador\r\n      .on(\"click\", function () {\r\n        // Se obtienen los datos\r\n        var promise = DevolverDato(element.codigo);\r\n        promise.then(function (response) {\r\n          oDato = JSON.parse(response);\r\n          arrayDatos.push(oDato);\r\n          // Funcion para crear los paneles de las balizas\r\n          CrearPanel(element, marker);\r\n          // Funcion para el boton de eliminar los paneles\r\n          CrearBotonEliminar(element.codigo, marker);\r\n          // Se crean los elemento droppable\r\n          CrearDroppable(element.codigo);\r\n        });\r\n      });\r\n     \r\n    aMarcadores.push(marker);\r\n  });\r\n}\r\n\r\n// Eliminar las opciones de los paneles (las P)\r\n$(\"#iBasura\").droppable({\r\n  drop:function(ui, event){\r\n    var draggableId = idP;\r\n    // Guardo la p (quitando el codigo que son los ultimos 9 caracteres)\r\n    var sOpcion = draggableId.substr(0, [draggableId.length-9]);\r\n    // Guardo el codigo de la baliza (los ultimos nueve caracteres del id)\r\n    var sCodigo = draggableId.substr ([draggableId.length-9],draggableId.length);    \r\n    // Elimino la p\r\n    $(`#${draggableId}`).remove();\r\n\r\n    // Actualizo el localStorage\r\n    if (sOpcion == \"pTemperatura\") {\r\n      aPaneles[sCodigo].temperatura = false; // En el localstorage \"temperatura\" se volvera false\r\n    }\r\n    else if (sOpcion  == \"pHumedad\") {\r\n      aPaneles[sCodigo].humedad = false; // En el localstorage el \"humedad\" se volvera false\r\n    }\r\n    else if (sOpcion  == \"pPresion\") {\r\n      aPaneles[sCodigo].presion = false; // En el localstorage el \"precipitacion\" se volvera false\r\n    }\r\n    else {\r\n      aPaneles[sCodigo].viento = false; // En el localstorage el \"viento\" se volvera false\r\n    }\r\n    localStorage.Paneles = JSON.stringify(aPaneles); // Se guarda el cambio en el localStorage\r\n  }\r\n})\r\n\r\nfunction ObtenerLocalStorage(aPaneles) {  \r\n  for (const codigo in aPaneles) {\r\n    const objeto = aPaneles[codigo];\r\n    // Si alguna baliza esta como visible\r\n    if (objeto[\"visible\"]) {\r\n      // Se obtiene el dato\r\n      var promise = DevolverDato(codigo);\r\n      promise.then(function (response) {\r\n        oDato = JSON.parse(response);\r\n        arrayDatos.push(oDato);\r\n        let marker;\r\n        // Buscamos el marcador por su customId\r\n        aMarcadores.forEach(element => {\r\n          // Recorremos los Id y se guarda el correspondiente\r\n          if(element.options.customId==`m${codigo}`){\r\n          marker = element;\r\n        }\r\n        });\r\n\r\n        marker.setIcon(iconoSeleccionado);\r\n\r\n        // Se añade el div\r\n        $(\"#panelesPueblos\").append(\r\n          `<div class='card' id='${codigo}'><i class=\"bi bi-x-square\" id=\"b${codigo}\"></i><h7 class=\"card-title\">${oDato.nombre.toUpperCase()}</h7></div>`\r\n        );\r\n        // Si los objetos objetos estaban guardados como true (es decir que estaban visibles)\r\n        if (objeto[\"temperatura\"]){\r\n          $(`#${codigo}`).append(`<p id=\"pTemperatura${codigo}\" class=\"card-text\">Temperatura: ${oDato.temperatura}</p>`);\r\n        }\r\n        if (objeto[\"humedad\"]){\r\n          $(`#${codigo}`).append(`<p id=\"pHumedad${codigo}\" class=\"card-text\">Humedad: ${oDato.humedad}</p>`);\r\n        } \r\n        if (objeto[\"viento\"]){\r\n          $(`#${codigo}`).append(`<p id=\"pViento${codigo}\" class=\"card-text\">Viento: ${oDato.velocidadViento}</p>`);\r\n        }\r\n        if (objeto[\"presion\"]){\r\n          $(`#${codigo}`).append(`<p id=\"pPresion${codigo}\" class=\"card-text\">Presión Atmosferica: ${oDato.presionAtmosferica}</p>`);\r\n        } \r\n        \r\n        // Convierto en draggable p\r\n        $(`.card-text`).draggable({\r\n          revert: \"invalid\",\r\n          helper: \"clone\",\r\n          start:function(ui){\r\n            // Guardo el id del dragabble p\r\n            idP = ui.target.id;\r\n          }\r\n        });\r\n\r\n        CrearBotonEliminar(codigo, marker);\r\n        CrearDroppable(codigo);\r\n      });\r\n    }      \r\n  }\r\n}\r\n// Funcion para crear los div de las balizas\r\nfunction CrearPanel(element, marker){\r\n  // Si no hay 4 municipios y el municipio ese aun no existe\r\n  if (document.getElementsByClassName(\"bi bi-x-square\").length < 4 && !document.getElementById(`${element.codigo}`)) {\r\n    marker.setIcon(iconoSeleccionado);\r\n    // Se añade el div\r\n    $(\"#panelesPueblos\").append(\r\n      `<div class='card' id='${element.codigo}'><i class=\"bi bi-x-square\" id=\"b${element.codigo}\"></i><h7 class=\"card-title\">${element.nombre.toUpperCase()}</h7><p class=\"card-text\" id=\"pTemperatura${\r\n        element.codigo\r\n      }\">Temperatura: ${oDato.temperatura}</p><p class=\"card-text\" id=\"pHumedad${element.codigo}\">Humedad: ${oDato.humedad}</div>`\r\n    );\r\n    // Convierto en draggable\r\n    $(`.card-text`).draggable({\r\n      revert: \"invalid\",\r\n      helper: \"clone\",\r\n      start:function(ui){\r\n        // Guardo el id del dragabble p\r\n        idP = ui.target.id;\r\n      }\r\n    });\r\n    // Añadimos al local los visibles\r\n    aPaneles[element.codigo].visible = true; // en el localstorage el \"visible\" se volvera true\r\n    aPaneles[element.codigo].temperatura = true; //en el localstorage el \"temperatura\" se volvera true\r\n    aPaneles[element.codigo].humedad = true; //en el localstorage el \"humedad\" se volvera true\r\n    localStorage.Paneles = JSON.stringify(aPaneles); // Se guarda    \r\n  }\r\n}\r\n\r\n// Se crea la opcion de eliminar la carta (div de la baliza)\r\nfunction CrearBotonEliminar(codigo, marker){\r\n// Se crea la funcion al hacer click en el button de eliminar el div del municipio\r\n  $(`#b${codigo}`).on(\"click\", function () {\r\n    // Elimina el div por el id del div\r\n    $(`#${codigo}`).remove();\r\n\r\n    // Eliminamos al local los visibles\r\n    aPaneles[codigo].visible = false; // En el localStorage el \"visible\" se volvera false\r\n    aPaneles[codigo].temperatura = false; // En el localstorage \"temperatura\" se volvera false\r\n    aPaneles[codigo].humedad = false; // En el localstorage el \"humedad\" se volvera false\r\n    localStorage.Paneles = JSON.stringify(aPaneles); // Se guarda\r\n\r\n    // Cambiamos el icono a no seleccionado\r\n    marker.setIcon(iconoSinSeleccionar);\r\n  });\r\n}\r\n\r\nfunction CrearDroppable(codigo) {\r\n  // Vuelvo a la funcion para obtener los datos de ese municipio\r\n\r\n  $(\"#\" + codigo).droppable({\r\n    drop: function (event, ui) {\r\n      // Busco en el array los datos de ese municipio\r\n      oDato = arrayDatos.find((item) => item.codigo == codigo);\r\n\r\n      // Obtengo el id del elemento draggable\r\n      var draggableId = ui.draggable[0].id;\r\n\r\n      if (draggableId == \"panelTemperatura\" && !document.getElementById(`pTemperatura${codigo}`)) {\r\n        $(this).append(`<p id=\"pTemperatura${codigo}\" class=\"card-text\">Temperatura: ${oDato.temperatura}</p>`);\r\n        aPaneles[codigo].temperatura = true; //en el localstorage el \"temperatura\" se volvera true\r\n      }\r\n      if (draggableId == \"panelHumedad\" && !document.getElementById(`pHumedad${codigo}`)) {\r\n        $(this).append(`<p id=\"pHumedad${codigo}\" class=\"card-text\">Humedad: ${oDato.humedad}</p>`);\r\n        aPaneles[codigo].humedad = true; //en el localstorage el \"humedad\" se volvera true\r\n      }\r\n      if (draggableId == \"panelPresion\" && !document.getElementById(`pPresion${codigo}`)) {\r\n        $(this).append(`<p id=\"pPresion${codigo}\" class=\"card-text\">Presión Atmosferica: ${oDato.presionAtmosferica}</p>`);\r\n        aPaneles[codigo].presion = true; //en el localstorage el \"presion\" se volvera true\r\n      }\r\n      if (draggableId == \"panelViento\" && !document.getElementById(`pViento${codigo}`)) {\r\n        $(this).append(`<p id=\"pViento${codigo}\" class=\"card-text\">Viento: ${oDato.velocidadViento}</p>`);\r\n        aPaneles[codigo].viento = true; //en el localstorage el \"viento\" se volvera true\r\n      }\r\n      // Convierto en draggable los p del cuadrado\r\n      $(`.card-text`).draggable({\r\n        revert: \"invalid\",\r\n        helper: \"clone\",\r\n        start:function(ui){\r\n          // Guardo el id del dragabble p\r\n          idP = ui.target.id;\r\n        }\r\n      });\r\n\r\n      localStorage.Paneles = JSON.stringify(aPaneles); // Se guarda el cambio en el localStorage\r\n    },\r\n  });\r\n}\r\n// FUncion para actualizar los datos visibles en el momento\r\nfunction ActualizarDatos() {\r\n  // Hago un for in para obtener del localStorage los codigo del objeto\r\n  for (const codigo in aPaneles) {\r\n    // Cuando el municipio esta visible\r\n    if (aPaneles[codigo].visible) {\r\n      // Llamo por los datos\r\n      var promise = DevolverDato(codigo);\r\n      promise.then(function (response) {\r\n        // Buscar en el array de datos indice del codigo\r\n        var indice = arrayDatos.map(function(e) { return e.codigo; }).indexOf(codigo);\r\n        // Obtengo el dato\r\n        oDato = JSON.parse(response);\r\n        // Actualizo los datos del array\r\n        arrayDatos[indice]= oDato;\r\n        // Introduzco el dato\r\n        arrayDatos.push(oDato);\r\n        // En caso de que existan, se actualiza\r\n        if (document.getElementById(`pTemperatura${codigo}`)) {\r\n          document.getElementById(`pTemperatura${codigo}`).innerHTML=`Temperatura: ${oDato.temperatura}`;\r\n          // console.log(\"Temperatura\" + oDato.temperatura);\r\n        }\r\n        if (document.getElementById(`pHumedad${codigo}`)) {\r\n          document.getElementById(`pHumedad${codigo}`).innerHTML=`Temperatura: ${oDato.humedad}`;\r\n          // console.log(\"Humedad\" + oDato.humedad);\r\n        }\r\n        if (document.getElementById(`pPresion${codigo}`)) {\r\n          document.getElementById(`pPresion${codigo}`).innerHTML=`Humedad: ${oDato.presionAtmosferica}`;\r\n          // console.log(\"Presion\" + oDato.presionAtmosferica);\r\n        }\r\n        if (document.getElementById(`pViento${codigo}`)) {\r\n          document.getElementById(`pViento${codigo}`).innerHTML=`Viento: ${oDato.velocidadViento}`;\r\n          // console.log(\"Viento\" + oDato.velocidadViento);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n// Si se hace click en la barra boton del mapa para mostrar y minimizar\r\n$(\"#bMapa\").click(() => {\r\n  // Si el mapa esta minimizado\r\n  if ( $(\"#map\").css('display') == 'none') {\r\n    $(\"#map\").css('display', \"block\")\r\n    $(\"#bMapa\").removeClass(\"border10px\")    \r\n  }\r\n  else{\r\n  // Si no esta minimizado\r\n    $(\"#map\").css('display', \"none\")\r\n    $(\"#bMapa\").addClass(\"border10px\");    \r\n  }\r\n});\r\n\r\n"],"names":["$66ba7a37141049c3$exports","L","$dfce7f2a1c53e63f$var$map","$dfce7f2a1c53e63f$var$sToken","$dfce7f2a1c53e63f$var$Login","usuario","document","getElementById","value","contrasena","$","ajax","type","dataType","contentType","url","$dfce7f2a1c53e63f$var$url","data","JSON","stringify","username","password","headers","accept","then","token","localStorage","setItem","window","location","fail","err","console","log","alert","ready","on","href","indexOf","getItem","$parcel$interopDefault","map","setView","$dfce7f2a1c53e63f$var$zoom","tileLayer","attribution","addTo","authorization","$dfce7f2a1c53e63f$var$aMunicipios","parse","forEach","element","marker","latitud","longitud","customId","codigo","icon","$dfce7f2a1c53e63f$var$iconoSinSeleccionar","bindPopup","nombre","$dfce7f2a1c53e63f$var$DevolverDato","response","$dfce7f2a1c53e63f$var$oDato","$dfce7f2a1c53e63f$var$arrayDatos","push","getElementsByClassName","length","setIcon","$dfce7f2a1c53e63f$var$iconoSeleccionado","append","toUpperCase","temperatura","humedad","draggable","revert","helper","start","ui","$dfce7f2a1c53e63f$var$idP","target","id","$dfce7f2a1c53e63f$var$aPaneles","visible","Paneles","$dfce7f2a1c53e63f$var$CrearPanel","$dfce7f2a1c53e63f$var$CrearBotonEliminar","$dfce7f2a1c53e63f$var$CrearDroppable","$dfce7f2a1c53e63f$var$aMarcadores","undefined","i","viento","presion","aPaneles","objeto","options","velocidadViento","presionAtmosferica","$dfce7f2a1c53e63f$var$ObtenerLocalStorage","setInterval","indice","e","innerHTML","$dfce7f2a1c53e63f$var$ActualizarDatos","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","remove","droppable","drop","event","ui1","find","item","draggableId","this","sOpcion","substr","sCodigo","click","css","removeClass","addClass"],"version":3,"file":"index.6a723eff.js.map"}